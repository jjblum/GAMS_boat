
#ifndef   _THREAD_CONTROL_H_
#define   _THREAD_CONTROL_H_

#include <string>
#include <stdio.h>
#include <iostream>
#include <memory>
#include <cmath>

#include "madara/threads/BaseThread.h"
#include "../boat_containers.h"
#include "../design.h"
#include "localization.h"
#include "../pid.h"

#include <eigen3/Eigen/Core>
#include <eigen3/Eigen/LU>

using namespace designs;

namespace threads
{
  /**
  * A custom thread generated by gams_sim_conf.pl
  **/
  class control : public madara::threads::BaseThread
  {
  public:
    /**
     * Default constructor
     **/
    control (Containers & containers_, std::shared_ptr<Design> design_);
    
    /**
     * Destructor
     **/
    virtual ~control ();
    
    /**
      * Initializes thread with MADARA context
      * @param   context   context for querying current program state
      **/
    virtual void init (madara::knowledge::KnowledgeBase & knowledge);

    /**
      * Executes the main thread logic
      **/
    virtual void run (void);    

  private:
    /// data plane if we want to access the knowledge base
    madara::knowledge::KnowledgeBase data_;
    std::shared_ptr<designs::Design> design;
    Containers containers;
    std::chrono::time_point<std::chrono::high_resolution_clock> t; // current time
    PID heading_PID;
  };
} // end namespace threads

#endif // _THREAD_CONTROL_H_
