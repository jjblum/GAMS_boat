
#ifndef   _THREAD_GPS_H_
#define   _THREAD_GPS_H_

#include <string>

#include "madara/threads/BaseThread.h"
#include "../boat_containers.h"
#include "/home/pi/Navio2/C++/Navio/Ublox.h"
#include "/home/pi/Navio2/C++/Navio/Util.h"
#include <unistd.h>
#include "localization.h"
#include "../utility.h"
#include "../datum.h"
#include "../localization_caller.h"
#include <GeographicLib/GeoCoords.hpp>


#define G_SI 9.80665
#define PI   3.14159

namespace threads
{
  /**
  * A custom thread generated by gams_sim_conf.pl
  **/
  class gps : public madara::threads::BaseThread, public LocalizationCaller
  {
  public:
    /**
     * Default constructor
     **/
    gps (Containers & containers, threads::localization * localization_reference);
    
    /**
     * Destructor
     **/
    virtual ~gps ();
    
    /**
      * Initializes thread with MADARA context
      * @param   context   context for querying current program state
      **/
    virtual void init (madara::knowledge::KnowledgeBase & knowledge);

    /**
      * Executes the main thread logic
      **/
    virtual void run (void);

  private:
    madara::knowledge::KnowledgeBase data_;
    Containers containers_;
    Ublox gps_;
    std::vector<double> pos_data;
    double GPRMC_to_degrees(double value);
  };
} // end namespace threads
	
#endif // _THREAD_GPS_H_
