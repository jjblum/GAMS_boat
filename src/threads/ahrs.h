
#ifndef   _THREAD_AHRS_H_
#define   _THREAD_AHRS_H_

#include <string>
#include <cmath>
#include <vector>
#include <eigen3/Eigen/Core>

#include "madara/threads/BaseThread.h"

#include "localization.h"
#include "../datum.h"
#include "../utility.h"
#include "../localization_caller.h"

#define AHRS_BAUD_RATE 115200
#define AHRS_PORT_NAME "/dev/tty_ahrs"

namespace threads
{
  /**
  * A custom thread generated by gams_sim_conf.pl
  **/
  class AHRS : public madara::threads::BaseThread, public LocalizationCaller
  {
  public:
    /**
     * Default constructor
     **/
    AHRS (threads::localization * localization_reference);
    
    /**
     * Destructor
     **/
    virtual ~AHRS ();
    
    /**
      * Initializes thread with MADARA context
      * @param   context   context for querying current program state
      **/
    virtual void init (madara::knowledge::KnowledgeBase & knowledge);

    /**
      * Executes the main thread logic
      **/
    virtual void run (void);

  private:
    /// data plane if we want to access the knowledge base
    madara::knowledge::KnowledgeBase data_;
    std::chrono::time_point<std::chrono::high_resolution_clock> t;
  };
} // end namespace threads

#endif // _THREAD_AHRS_H_
